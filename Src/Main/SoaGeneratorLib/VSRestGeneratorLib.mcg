using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

configuration
	string NamespaceName = "SoaMetaModel";
	string ClassName = "VSRestGenerator";
end configuration


/*
* Generate web.config file in Services folder
* Uses: GenerateBindings(), GenerateBehaviors(), GenerateServices()
*/
template GenerateWebConfig()
<?xml version="1.0"?>
<configuration>

  <system.serviceModel>
    [GenerateBehaviors()]
    [GenerateServices()]
  </system.serviceModel>

</configuration>
end template

template GenerateClientAppConfig()
<?xml version="1.0"?>
<configuration>

  <system.serviceModel>
    [GenerateClientBehaviors()]
    [GenerateClientEndpoints()]
  </system.serviceModel>

</configuration>
end template


/*
* Generate <behaviors> section
*/
template GenerateBehaviors()
<behaviors>
  [loop(Instances->endpoint:typeof(Endpoint))]
  <serviceBehaviors>
	  <behavior name="[endpoint.Name]Behavior">  
		<serviceMetadata httpGetEnabled="true"/>
		<serviceDebug includeExceptionDetailInFaults="false"/>
	  </behavior>
  </serviceBehaviors>
  <endpointBehaviors>
        <behavior name="web">
          <webHttp/>
        </behavior>
  </endpointBehaviors>
  [end loop]
</behaviors>
end template

template GenerateClientBehaviors()
<behaviors>
  <endpointBehaviors>
	[loop(Instances->endpoint:typeof(Endpoint))]
	  <behavior name="[endpoint.Name]Behavior">  
		<serviceMetadata httpGetEnabled="true"/>
		<serviceDebug includeExceptionDetailInFaults="false"/>
	  </behavior>
	[end loop]
  </endpointBehaviors>
</behaviors>
end template

/*
* Generate <services> section
*/
template GenerateServices()
<services>
	[loop(Instances->endpoint:typeof(Endpoint))]
	<service name="[endpoint.Interface.Namespace.FullName].[endpoint.Name]" behaviorConfiguration="[endpoint.Name]Behavior">
		<endpoint address="" binding="webHttpBinding" contract="[endpoint.Interface.Namespace.FullName].[endpoint.Interface.Name]"
				  behaviorConfiguration="web"></endpoint>
	</service>
	[end loop]
</services>
end template

template GenerateClientEndpoints()
<client>
	[loop(Instances->endpoint:typeof(Endpoint))]
	  <endpoint name="[endpoint.Interface.Namespace.FullName].[endpoint.Name]" contract="[endpoint.Interface.Namespace.FullName].[endpoint.Interface.Name]" binding="customBinding" bindingConfiguration="[endpoint.Binding.Name]" behaviorConfiguration="[endpoint.Name]Behavior" address="[endpoint.Address.Uri]">
	  </endpoint>
	[end loop]
</client>
end template

